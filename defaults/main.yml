---
# Role default lower priority variables

# List of dicts with the certificates to manage. The dicts have the following
# structure:
#
# {
#
#   alias: myca                      # Alias for the certificate. Will be
#                                    # used as the base for PEM file name
#   description: My CA certificate   # Description of the certificate
#   state: present                   # State can be present or absent
#   priority: high                   # Priorioty of the certifcate. Can be
#                                    # high or low. This determines where the
#                                    # PEM file will be placed on filesystem#
#   pem: |                           # Inline certificate in PEM format
#     -----BEGIN CERTIFICATE-----
#     ...
#     -----END CERTIFICATE-----
#
#   artifact:                         # File artifact containing certificate
#     type: https
#     host: https://example.com
#     path: /
#     file: ExampleGlobalRootCA.crt.pem

ca_certificates: []

# Default artifact attributes to combine with the ones defined inside the
# variable ca_certificates[*],artifact. This is useful if you want to avoid
# copy & paste common artifact attributes when calling the rol with several
# artifacts

ca_certificates_artifact_defaults: {}

# Anchor directories

ca_certificates_low_priority_anchors_dir: /usr/share/pki/ca-trust-source/anchors
ca_certificates_high_priority_anchors_dir: /etc/pki/ca-trust/source/anchors

# Indicate if certificate list must be loaded also from host variables. Any host
# variable that begins with the pattern specified in
# `ca_certificates_hostvars_pattern` and contains "alias" attribute will be
# loaded as certificate to manage by the role. The variables must follow the
# dict structure detailed before for the `ca_certificates` list.

ca_certificates_load_from_hostvars: yes

# Pattern that hostvars must match to be selected if
# `ca_certificates_load_from_hostvars` is true

ca_certificates_hostvars_pattern: "cert_.*"
